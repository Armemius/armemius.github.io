name: Website build & deployment

on:
  push: { branches: main }
  pull_request: { branches: main }

jobs:
  lint-markdown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Lint Markdown files
        run: markdownlint '**/*.md'

  eslint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs:
      - lint-markdown
      - eslint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

  deploy-pages:
    needs: test
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  deploy-server:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install rsync -y

      - name: Install rsync on Remote Server
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "sudo apt update && sudo apt install -y rsync"

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
          echo -e "Host *\n  IdentityFile ~/.ssh/id_ed25519\n  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Check Server Availability
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "echo 'Server is reachable'"

      - name: Transfer Files to Server
        run: |
          rsync -avz --delete ./dist/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/var/www/armemius.ru/

      - name: Restart Nginx
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "sudo systemctl restart nginx"

      - name: Verify Deployment
        run: |
          curl -I https://${{ secrets.REMOTE_HOST }}
